// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ABKLabs.Runner.Runner
{
    [RunnerResourceType("runner:runner:SSHDeployer")]
    public partial class SSHDeployer : global::Pulumi.CustomResource
    {
        [Output("config")]
        public Output<Outputs.Config?> Config { get; private set; } = null!;

        [Output("connection")]
        public Output<ABKLabs.Runner.Ssh.Outputs.Connection> Connection { get; private set; } = null!;

        [Output("create")]
        public Output<Outputs.CommandDefinition?> Create { get; private set; } = null!;

        [Output("delete")]
        public Output<Outputs.CommandDefinition?> Delete { get; private set; } = null!;

        [Output("environment")]
        public Output<ImmutableDictionary<string, string>?> Environment { get; private set; } = null!;

        [Output("payload")]
        public Output<ImmutableArray<Outputs.FileAsset>> Payload { get; private set; } = null!;

        [Output("update")]
        public Output<Outputs.CommandDefinition?> Update { get; private set; } = null!;


        /// <summary>
        /// Create a SSHDeployer resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SSHDeployer(string name, SSHDeployerArgs args, CustomResourceOptions? options = null)
            : base("runner:runner:SSHDeployer", name, args ?? new SSHDeployerArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SSHDeployer(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("runner:runner:SSHDeployer", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/abklabs",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SSHDeployer resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SSHDeployer Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new SSHDeployer(name, id, options);
        }
    }

    public sealed class SSHDeployerArgs : global::Pulumi.ResourceArgs
    {
        [Input("config")]
        public Input<Inputs.ConfigArgs>? Config { get; set; }

        [Input("connection", required: true)]
        public Input<ABKLabs.Runner.Ssh.Inputs.ConnectionArgs> Connection { get; set; } = null!;

        [Input("create")]
        public Input<Inputs.CommandDefinitionArgs>? Create { get; set; }

        [Input("delete")]
        public Input<Inputs.CommandDefinitionArgs>? Delete { get; set; }

        [Input("environment")]
        private InputMap<string>? _environment;
        public InputMap<string> Environment
        {
            get => _environment ?? (_environment = new InputMap<string>());
            set => _environment = value;
        }

        [Input("payload")]
        private InputList<Inputs.FileAssetArgs>? _payload;
        public InputList<Inputs.FileAssetArgs> Payload
        {
            get => _payload ?? (_payload = new InputList<Inputs.FileAssetArgs>());
            set => _payload = value;
        }

        [Input("update")]
        public Input<Inputs.CommandDefinitionArgs>? Update { get; set; }

        public SSHDeployerArgs()
        {
        }
        public static new SSHDeployerArgs Empty => new SSHDeployerArgs();
    }
}
