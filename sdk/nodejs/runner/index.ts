// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { LocalFileArgs, LocalFileResult, LocalFileOutputArgs } from "./localFile";
export const localFile: typeof import("./localFile").localFile = null as any;
export const localFileOutput: typeof import("./localFile").localFileOutput = null as any;
utilities.lazyLoad(exports, ["localFile","localFileOutput"], () => require("./localFile"));

export { SSHDeployerArgs } from "./sshdeployer";
export type SSHDeployer = import("./sshdeployer").SSHDeployer;
export const SSHDeployer: typeof import("./sshdeployer").SSHDeployer = null as any;
utilities.lazyLoad(exports, ["SSHDeployer"], () => require("./sshdeployer"));

export { StringFileArgs, StringFileResult, StringFileOutputArgs } from "./stringFile";
export const stringFile: typeof import("./stringFile").stringFile = null as any;
export const stringFileOutput: typeof import("./stringFile").stringFileOutput = null as any;
utilities.lazyLoad(exports, ["stringFile","stringFileOutput"], () => require("./stringFile"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "runner:runner:SSHDeployer":
                return new SSHDeployer(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("runner", "runner", _module)
