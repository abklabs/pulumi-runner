// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export function stringFile(args?: StringFileArgs, opts?: pulumi.InvokeOptions): Promise<StringFileResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("runner:runner:stringFile", {
        "contents": args.contents,
        "filename": args.filename,
        "localPath": args.localPath,
        "mode": args.mode,
    }, opts);
}

export interface StringFileArgs {
    contents?: string;
    filename?: string;
    localPath?: string;
    mode?: number;
}

export interface StringFileResult {
    readonly contents?: string;
    readonly filename?: string;
    readonly localPath?: string;
    readonly mode?: number;
}
export function stringFileOutput(args?: StringFileOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<StringFileResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("runner:runner:stringFile", {
        "contents": args.contents,
        "filename": args.filename,
        "localPath": args.localPath,
        "mode": args.mode,
    }, opts);
}

export interface StringFileOutputArgs {
    contents?: pulumi.Input<string>;
    filename?: pulumi.Input<string>;
    localPath?: pulumi.Input<string>;
    mode?: pulumi.Input<number>;
}
