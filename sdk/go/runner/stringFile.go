// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package runner

import (
	"context"
	"reflect"

	"github.com/abklabs/pulumi-runner/sdk/go/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func StringFile(ctx *pulumi.Context, args *StringFileArgs, opts ...pulumi.InvokeOption) (*StringFileResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv StringFileResult
	err := ctx.Invoke("runner:runner:stringFile", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type StringFileArgs struct {
	Contents  *string `pulumi:"contents"`
	Filename  *string `pulumi:"filename"`
	LocalPath *string `pulumi:"localPath"`
	Mode      *int    `pulumi:"mode"`
}

type StringFileResult struct {
	Contents  *string `pulumi:"contents"`
	Filename  *string `pulumi:"filename"`
	LocalPath *string `pulumi:"localPath"`
	Mode      *int    `pulumi:"mode"`
}

func StringFileOutput(ctx *pulumi.Context, args StringFileOutputArgs, opts ...pulumi.InvokeOption) StringFileResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (StringFileResultOutput, error) {
			args := v.(StringFileArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("runner:runner:stringFile", args, StringFileResultOutput{}, options).(StringFileResultOutput), nil
		}).(StringFileResultOutput)
}

type StringFileOutputArgs struct {
	Contents  pulumi.StringPtrInput `pulumi:"contents"`
	Filename  pulumi.StringPtrInput `pulumi:"filename"`
	LocalPath pulumi.StringPtrInput `pulumi:"localPath"`
	Mode      pulumi.IntPtrInput    `pulumi:"mode"`
}

func (StringFileOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StringFileArgs)(nil)).Elem()
}

type StringFileResultOutput struct{ *pulumi.OutputState }

func (StringFileResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StringFileResult)(nil)).Elem()
}

func (o StringFileResultOutput) ToStringFileResultOutput() StringFileResultOutput {
	return o
}

func (o StringFileResultOutput) ToStringFileResultOutputWithContext(ctx context.Context) StringFileResultOutput {
	return o
}

func (o StringFileResultOutput) Contents() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StringFileResult) *string { return v.Contents }).(pulumi.StringPtrOutput)
}

func (o StringFileResultOutput) Filename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StringFileResult) *string { return v.Filename }).(pulumi.StringPtrOutput)
}

func (o StringFileResultOutput) LocalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StringFileResult) *string { return v.LocalPath }).(pulumi.StringPtrOutput)
}

func (o StringFileResultOutput) Mode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StringFileResult) *int { return v.Mode }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(StringFileResultOutput{})
}
